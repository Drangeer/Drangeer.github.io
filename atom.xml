<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LizZ的博客</title>
  
  <subtitle>LizZ Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://drangeer.github.io/"/>
  <updated>2020-04-14T08:33:27.851Z</updated>
  <id>https://drangeer.github.io/</id>
  
  <author>
    <name>LizZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cesium从入门到弃坑-3</title>
    <link href="https://drangeer.github.io/2020/04/14/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91-3/"/>
    <id>https://drangeer.github.io/2020/04/14/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91-3/</id>
    <published>2020-04-14T08:12:05.000Z</published>
    <updated>2020-04-14T08:33:27.851Z</updated>
    
    <content type="html"><![CDATA[<h2 id="cesium添加dem"><a href="#cesium添加dem" class="headerlink" title="cesium添加dem"></a>cesium添加dem</h2><p>cesium添加dem的过程一番风顺，并没有遇到什么奇奇怪怪的问题。</p><p>其中提到的<code>gdal2srtmtiles_x64</code>软件，是使用python进行编写的。按照说明文档逐步进行操作即可。<br>当发现<code>Python编译出现错误SyntaxError: Non-ASCII character &#39;\xe7&#39;</code>这个错误的时候，是因为python2.7的默认编码文件是用ASCII码，而文件中包含了中文注释或者输出路径。<br>需要在文件开头加入一行代码将文件存成UTF-8格式即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#coding&#x3D;utf-8</span><br></pre></td></tr></table></figure><p>下面附图为dem添加成功的显示效果<br><img src="1.png" alt="dem添加效果"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/62d6f03f44e3" target="_blank" rel="noopener">https://www.jianshu.com/p/62d6f03f44e3</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;cesium添加dem&quot;&gt;&lt;a href=&quot;#cesium添加dem&quot; class=&quot;headerlink&quot; title=&quot;cesium添加dem&quot;&gt;&lt;/a&gt;cesium添加dem&lt;/h2&gt;&lt;p&gt;cesium添加dem的过程一番风顺，并没有遇到什么奇奇怪怪的问题。
      
    
    </summary>
    
    
      <category term="cesium从入门到弃坑" scheme="https://drangeer.github.io/categories/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91/"/>
    
    
      <category term="cesium" scheme="https://drangeer.github.io/tags/cesium/"/>
    
  </entry>
  
  <entry>
    <title>cesium从入门到弃坑-2</title>
    <link href="https://drangeer.github.io/2020/04/13/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91-2/"/>
    <id>https://drangeer.github.io/2020/04/13/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91-2/</id>
    <published>2020-04-13T09:41:26.000Z</published>
    <updated>2020-04-14T01:36:24.373Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-cesium加载3dtiles"><a href="#1-cesium加载3dtiles" class="headerlink" title="1.cesium加载3dtiles"></a>1.cesium加载3dtiles</h2><p>正常情况下，cesium加载3dtiles的时候，网上一般的写法是使用指定的函数+url就可以实现3dtiles的加载了，但第一次加载的时候，却会报如下所示的错误。</p><p>错误说明为：<code>RuntimeError: Unsupported glTF Extension: KHR_technique_webgl</code></p><p><img src="1.jpg" alt="添加3dtiles报错"></p><h2 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2.解决方法"></a>2.解决方法</h2><p>从网上查询到的原因是cesium已经不支持KHR_technique_webgl扩展新版，需要升级一下gltf数据、或者修改源码使其支持即可。</p><p>现将实现代码粘贴如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fixGltf = <span class="function"><span class="keyword">function</span>(<span class="params">gltf</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!gltf.extensionsUsed) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> v = gltf.extensionsUsed.indexOf(<span class="string">'KHR_technique_webgl'</span>);</span><br><span class="line">    <span class="keyword">var</span> t = gltf.extensionsRequired.indexOf(<span class="string">'KHR_technique_webgl'</span>);</span><br><span class="line">    <span class="comment">// 中招了。。</span></span><br><span class="line">    <span class="keyword">if</span> (v !== <span class="number">-1</span>) &#123;</span><br><span class="line">        gltf.extensionsRequired.splice(t, <span class="number">1</span>, <span class="string">'KHR_techniques_webgl'</span>);</span><br><span class="line">        gltf.extensionsUsed.splice(v, <span class="number">1</span>, <span class="string">'KHR_techniques_webgl'</span>);</span><br><span class="line">        gltf.extensions = gltf.extensions || &#123;&#125;;</span><br><span class="line">        gltf.extensions[<span class="string">'KHR_techniques_webgl'</span>] = &#123;&#125;;</span><br><span class="line">        gltf.extensions[<span class="string">'KHR_techniques_webgl'</span>].programs = gltf.programs;</span><br><span class="line">        gltf.extensions[<span class="string">'KHR_techniques_webgl'</span>].shaders = gltf.shaders;</span><br><span class="line">        gltf.extensions[<span class="string">'KHR_techniques_webgl'</span>].techniques = gltf.techniques;</span><br><span class="line">        <span class="keyword">var</span> techniques = gltf.extensions[<span class="string">'KHR_techniques_webgl'</span>].techniques;</span><br><span class="line"></span><br><span class="line">        gltf.materials.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">mat, index</span>) </span>&#123;</span><br><span class="line">            gltf.materials[index].extensions[<span class="string">'KHR_technique_webgl'</span>].values = gltf.materials[index].values;</span><br><span class="line">            gltf.materials[index].extensions[<span class="string">'KHR_techniques_webgl'</span>] = gltf.materials[index].extensions[<span class="string">'KHR_technique_webgl'</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> vtxfMaterialExtension = gltf.materials[index].extensions[<span class="string">'KHR_techniques_webgl'</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> value <span class="keyword">in</span> vtxfMaterialExtension.values) &#123;</span><br><span class="line">                <span class="keyword">var</span> us = techniques[vtxfMaterialExtension.technique].uniforms;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> us) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (us[key] === value) &#123;</span><br><span class="line">                        vtxfMaterialExtension.values[key] = vtxfMaterialExtension.values[value];</span><br><span class="line">                        <span class="keyword">delete</span> vtxfMaterialExtension.values[value];</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        techniques.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> attribute <span class="keyword">in</span> t.attributes) &#123;</span><br><span class="line">                <span class="keyword">var</span> name = t.attributes[attribute];</span><br><span class="line">                t.attributes[attribute] = t.parameters[name];</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> uniform <span class="keyword">in</span> t.uniforms) &#123;</span><br><span class="line">                <span class="keyword">var</span> name = t.uniforms[uniform];</span><br><span class="line">                t.uniforms[uniform] = t.parameters[name];</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperties(Cesium.Model.prototype, &#123;</span><br><span class="line">    _cachedGltf: &#123;</span><br><span class="line">        <span class="keyword">set</span>: function (value) &#123;</span><br><span class="line">            <span class="keyword">this</span>._vtxf_cachedGltf = value;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>._vtxf_cachedGltf &amp;&amp; <span class="keyword">this</span>._vtxf_cachedGltf._gltf) &#123;</span><br><span class="line">                fixGltf(<span class="keyword">this</span>._vtxf_cachedGltf._gltf);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">get</span>: function () &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>._vtxf_cachedGltf;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.jianshu.com/p/e0e0a62c5726" target="_blank" rel="noopener">https://www.jianshu.com/p/e0e0a62c5726</a><br><a href="https://blog.csdn.net/qq_36377037/article/details/86591761" target="_blank" rel="noopener">https://blog.csdn.net/qq_36377037/article/details/86591761</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-cesium加载3dtiles&quot;&gt;&lt;a href=&quot;#1-cesium加载3dtiles&quot; class=&quot;headerlink&quot; title=&quot;1.cesium加载3dtiles&quot;&gt;&lt;/a&gt;1.cesium加载3dtiles&lt;/h2&gt;&lt;p&gt;正常情况下，cesi
      
    
    </summary>
    
    
      <category term="cesium从入门到弃坑" scheme="https://drangeer.github.io/categories/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91/"/>
    
    
      <category term="cesium" scheme="https://drangeer.github.io/tags/cesium/"/>
    
  </entry>
  
  <entry>
    <title>cesium从入门到弃坑-1</title>
    <link href="https://drangeer.github.io/2020/04/13/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91-1/"/>
    <id>https://drangeer.github.io/2020/04/13/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91-1/</id>
    <published>2020-04-13T08:43:46.000Z</published>
    <updated>2020-04-13T09:35:48.662Z</updated>
    
    <content type="html"><![CDATA[<p>最近因为项目需要，又开了一个填坑，来记录自己学习和使用cesium中遇到的问题或者总结的经验。</p><h4 id="1-在vue中加载cesium"><a href="#1-在vue中加载cesium" class="headerlink" title="1.在vue中加载cesium"></a>1.在vue中加载cesium</h4><p>主要的引入方式有两种</p><ul><li>在<code>index.html</code>中直接加载js和css</li><li>通过webpack加载</li></ul><p>下面详细记录两种加载方式</p><p><strong>1.直接引用cesium</strong></p><blockquote><p>1.安装 npm i cesium </p><p>2.拷贝node_modules/cesium/build下的文件到public中</p><p><img src="1.png" alt="cesium源文件"></p><p>3.在<code>index.html</code>中引用<br><img src="2.jpg" alt="index中添加位置"></p><p>然后就可以在项目中愉快的使用了</p></blockquote><p><strong>2.通过webpack加载cesium</strong></p><blockquote><ol><li><p>安装包 yarn add cesium</p></li><li><p>配置vue.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> CopyWebpackPlugin = <span class="built_in">require</span>(<span class="string">'copy-webpack-plugin'</span>)</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加cesium文件路径</span></span><br><span class="line"><span class="keyword">const</span> cesiumSource = <span class="string">'./node_modules/cesium/Source'</span></span><br><span class="line"><span class="keyword">const</span> cesiumWorkers = <span class="string">'../Build/Cesium/Workers'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line"> publicPath: <span class="string">'./'</span>,</span><br><span class="line"> outputDir: <span class="string">'dist'</span>,</span><br><span class="line"> assetsDir: <span class="string">'assets'</span>,</span><br><span class="line"> productionSourceMap: <span class="literal">false</span>,</span><br><span class="line"> filenameHashing: <span class="literal">false</span>,</span><br><span class="line"> lintOnSave: <span class="literal">true</span>,</span><br><span class="line"> devServer: &#123;</span><br><span class="line">   open: <span class="literal">false</span>,</span><br><span class="line">   host: <span class="string">'0.0.0.0'</span>,</span><br><span class="line">   port: <span class="number">8066</span>,</span><br><span class="line">   https: <span class="literal">false</span>,</span><br><span class="line">   hotOnly: <span class="literal">false</span>,</span><br><span class="line">   proxy: &#123;</span><br><span class="line">     <span class="string">'/3dtiles'</span>: &#123;</span><br><span class="line">       target: <span class="string">`http://localhost`</span>,</span><br><span class="line">       changeOrigin: <span class="literal">true</span></span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> configureWebpack: &#123;</span><br><span class="line">   output: &#123;</span><br><span class="line">     sourcePrefix: <span class="string">' '</span></span><br><span class="line">   &#125;,</span><br><span class="line">   amd: &#123;</span><br><span class="line">     toUrlUndefined: <span class="literal">true</span></span><br><span class="line">   &#125;,</span><br><span class="line">   resolve: &#123;</span><br><span class="line">     alias: &#123;</span><br><span class="line">       vue$: <span class="string">'vue/dist/vue.esm.js'</span>,</span><br><span class="line">       <span class="string">'@'</span>: path.resolve(<span class="string">'src'</span>),</span><br><span class="line">       cesium: path.resolve(__dirname, cesiumSource)</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   plugins: [</span><br><span class="line">     <span class="keyword">new</span> CopyWebpackPlugin([&#123; <span class="attr">from</span>: path.join(cesiumSource, cesiumWorkers), <span class="attr">to</span>: <span class="string">'Workers'</span> &#125;]),</span><br><span class="line">     <span class="keyword">new</span> CopyWebpackPlugin([&#123; <span class="attr">from</span>: path.join(cesiumSource, <span class="string">'Assets'</span>), <span class="attr">to</span>: <span class="string">'Assets'</span> &#125;]),</span><br><span class="line">     <span class="keyword">new</span> CopyWebpackPlugin([&#123; <span class="attr">from</span>: path.join(cesiumSource, <span class="string">'Widgets'</span>), <span class="attr">to</span>: <span class="string">'Widgets'</span> &#125;]),</span><br><span class="line">     <span class="keyword">new</span> CopyWebpackPlugin([&#123; <span class="attr">from</span>: path.join(cesiumSource, <span class="string">'ThirdParty/Workers'</span>), <span class="attr">to</span>: <span class="string">'ThirdParty/Workers'</span> &#125;]),</span><br><span class="line">     <span class="keyword">new</span> webpack.DefinePlugin(&#123;</span><br><span class="line">       CESIUM_BASE_URL: <span class="built_in">JSON</span>.stringify(<span class="string">'./'</span>)</span><br><span class="line">     &#125;)</span><br><span class="line">   ],</span><br><span class="line">   <span class="built_in">module</span>: &#123;</span><br><span class="line">     unknownContextCritical: <span class="regexp">/^.\/.*$/</span>,</span><br><span class="line">     unknownContextCritical: <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="3"><li>项目引用<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /*网上有部分代码是使用下面的情况直接引用，但是我这里加载的时候，提示cesium is undefined*/</span></span><br><span class="line"><span class="comment">// import  Cesium from 'cesium/Cesium'</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> Cesium <span class="keyword">from</span> <span class="string">'cesium/Cesium'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'cesium/Widgets/widgets.css'</span></span><br><span class="line"><span class="comment">// 接下来就按照正常的方式加载即可</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><p>最后附一张图表明项目添加成功<br><img src="3.png" alt="cesium添加成功"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近因为项目需要，又开了一个填坑，来记录自己学习和使用cesium中遇到的问题或者总结的经验。&lt;/p&gt;
&lt;h4 id=&quot;1-在vue中加载cesium&quot;&gt;&lt;a href=&quot;#1-在vue中加载cesium&quot; class=&quot;headerlink&quot; title=&quot;1.在vue中
      
    
    </summary>
    
    
      <category term="cesium从入门到弃坑" scheme="https://drangeer.github.io/categories/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91/"/>
    
    
      <category term="cesium" scheme="https://drangeer.github.io/tags/cesium/"/>
    
  </entry>
  
  <entry>
    <title>IDEA提示页面未授权的解决方案</title>
    <link href="https://drangeer.github.io/2020/04/09/IDEA%E6%8F%90%E7%A4%BA%E9%A1%B5%E9%9D%A2%E6%9C%AA%E6%8E%88%E6%9D%83/"/>
    <id>https://drangeer.github.io/2020/04/09/IDEA%E6%8F%90%E7%A4%BA%E9%A1%B5%E9%9D%A2%E6%9C%AA%E6%8E%88%E6%9D%83/</id>
    <published>2020-04-09T03:11:11.000Z</published>
    <updated>2020-04-09T03:21:17.282Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Q-requested-without-authorization-you-can-copy-URL-and-open-it-in-browser-to-trust-it"><a href="#Q-requested-without-authorization-you-can-copy-URL-and-open-it-in-browser-to-trust-it" class="headerlink" title="Q: requested without authorization,you can copy URL and open it in browser to trust it"></a>Q: requested without authorization,you can copy URL and open it in browser to trust it</h3><p>详情如下图所示：<br><img src="1.png" alt="问题截图"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><pre><code>这个问题发生在直接通过idea的快捷方式打开网页时候，会构建一个端口号为63342的默认服务，通过这种方式可以方便调用接口和其他一些静态资源。可以通过如下方式开启授权即可。</code></pre><p><img src="2.png" alt="解决方式"></p><p>这样设置只在当前项目中生效，在不同的项目中重复设置即可。以前遇到类似的问题，总是需要现场查询，记录下来之后，就方便以后快速查找了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Q-requested-without-authorization-you-can-copy-URL-and-open-it-in-browser-to-trust-it&quot;&gt;&lt;a href=&quot;#Q-requested-without-authorization-y
      
    
    </summary>
    
    
    
      <category term="idea" scheme="https://drangeer.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>rtmp视频直播终极解决方案</title>
    <link href="https://drangeer.github.io/2020/04/09/%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD/"/>
    <id>https://drangeer.github.io/2020/04/09/%E8%A7%86%E9%A2%91%E7%9B%B4%E6%92%AD/</id>
    <published>2020-04-09T03:05:59.000Z</published>
    <updated>2020-04-09T03:09:45.443Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="rtmp" scheme="https://drangeer.github.io/tags/rtmp/"/>
    
  </entry>
  
  <entry>
    <title>cesium生成并加载3dTiles</title>
    <link href="https://drangeer.github.io/2020/04/02/cesium-3dtiles-osgb/"/>
    <id>https://drangeer.github.io/2020/04/02/cesium-3dtiles-osgb/</id>
    <published>2020-04-02T07:41:18.000Z</published>
    <updated>2020-04-14T07:01:42.816Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cesium加载三维倾斜模型"><a href="#cesium加载三维倾斜模型" class="headerlink" title="cesium加载三维倾斜模型"></a>cesium加载三维倾斜模型</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前cesium加载海量模型，并不能直接通过gltf文件来使用，一种较为合适的通用做法是对大场景进行切片，即生成影像金字塔(LOD)。这样就跟wmts或tms方式一样来加载超大的影像。</p><h2 id="osgb生成3dtiles"><a href="#osgb生成3dtiles" class="headerlink" title="osgb生成3dtiles"></a>osgb生成3dtiles</h2><h4 id="1-osgb文件什么样"><a href="#1-osgb文件什么样" class="headerlink" title="1.osgb文件什么样"></a>1.osgb文件什么样</h4><p>主要长下面的样子，由一个元数据xml和一个Data文件夹组成，Data里面包含的是由一系列不同编号的osgb文件夹组成</p><img src="/2020/04/02/cesium-3dtiles-osgb/p1.png" class="" title="osgb文件的模样"> <img src="/2020/04/02/cesium-3dtiles-osgb/p2.png" class="" title="Data内部的组成"> <img src="/2020/04/02/cesium-3dtiles-osgb/p3.png" class="" title="Data内部的组成"><h4 id="2-如何生成3dtiles"><a href="#2-如何生成3dtiles" class="headerlink" title="2.如何生成3dtiles"></a>2.如何生成3dtiles</h4><p>目前市面上的解决方案主要有cesiumlab/osg2cesiumApp。鉴于cesiumlab目前好像开始需要注册和收费，本着白嫖的精神使用另外一种文件进行转换就可以了。<br>高阶大佬可以直接转步github,<a href="https://github.com/fanvanzh/3dtiles" target="_blank" rel="noopener">3dtiles</a>是个好工具，以前研究过，但因为技术太渣和时间限制，没有对其进行详细的研究。</p><h3 id="osg2cesiumApp"><a href="#osg2cesiumApp" class="headerlink" title="osg2cesiumApp"></a>osg2cesiumApp</h3><p>直接按照说明使用即可，下图中的数据是一个<code>错误</code>的参数，srs坐标系和原点都不对，应该是从xml文件里面获取的，但我拿到的测试数据坐标系没有转换，所以才导致后来发生了好多坑。</p><img src="/2020/04/02/cesium-3dtiles-osgb/p4.png" class="" title="软件使用截图"><h3 id="cesiumlab"><a href="#cesiumlab" class="headerlink" title="cesiumlab"></a>cesiumlab</h3><p>因为已经有一份以前转换好的数据，关于这方面的叙述就先不展开了。cesiumlab或者其他的地方已经有很详细的资料了，直接拿来参考即可。</p><h2 id="osg2cesiumApp与cesiumlab比较"><a href="#osg2cesiumApp与cesiumlab比较" class="headerlink" title="osg2cesiumApp与cesiumlab比较"></a>osg2cesiumApp与cesiumlab比较</h2><h2 id="两者都可以直接生成3dtiles，但生成的效果略有不同。"><a href="#两者都可以直接生成3dtiles，但生成的效果略有不同。" class="headerlink" title="两者都可以直接生成3dtiles，但生成的效果略有不同。"></a>两者都可以直接生成3dtiles，但生成的效果略有不同。</h2><ul><li><p>osg2cesiumApp生成的效果<br><img src="1.png" alt="地图缩放问题"></p></li><li><p>cesiumlab生成效果<br><img src="2.png" alt="地图缩放问题"></p></li></ul><hr><h4 id="如图所示，能够很明显的看出来问题。"><a href="#如图所示，能够很明显的看出来问题。" class="headerlink" title="如图所示，能够很明显的看出来问题。"></a>如图所示，能够很明显的看出来问题。</h4><ul><li><p>app生成的模型在地图缩放的时候，需要等待片刻才能显示所有的模型，lab生成的模型却不存在这个问题。</p></li><li><p>app模型看起来精细程度较高。</p><p>深入分析原因，可能是lab采用了<code>分级tileset.json</code>，所以在不同层级能够获得较好的加载效果，但同时也损失了部分精细程度。</p></li></ul><hr><h2 id="cesium加载3dtiles"><a href="#cesium加载3dtiles" class="headerlink" title="cesium加载3dtiles"></a>cesium加载3dtiles</h2><p>1.读取3dtiles文件<br>    我使用的是nginx进行代理，这样生成的文件就不必非得存放到指定的位置，只要进行地址映射就好了<br>2.cesium直接加载<br>    目前模型生成之后，加载到地图上找不到在哪里，只能通过移动模型中心点位置和高度才可以显示。</p><hr><pre><code>(2020年4月14日11:36:37更新)现在使用原生的cesium可以正常加载，也没有任何显示问题，上次是因为使用了超图的cesium框架，具体细节未知，更加坚定了使用原生框架来解决问题。</code></pre><ol start="3"><li><p>模型高度不准确<br> 需要在模型加载之后，通过设置模型的高度来调整即可</p><pre><code class="javascript"><span class="keyword">var</span> tileset = <span class="keyword">new</span> Cesium.Cesium3DTileset({       url: <span class="string">'/3dtiles/wkm4326/WKM/tileset.json'</span>     })     viewer.scene.primitives.add(tileset)     <span class="comment">// 修改高度</span>     <span class="keyword">const</span> h = <span class="number">-10</span>     tileset.readyPromise.then(<span class="function">(<span class="params">arg</span>) =&gt;</span> {       <span class="keyword">var</span> cartographic = Cesium.Cartographic.fromCartesian(arg.boundingSphere.center)       <span class="keyword">var</span> surface = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height)       <span class="keyword">var</span> offset = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, cartographic.height + h)       <span class="keyword">var</span> translation = Cesium.Cartesian3.subtract(offset, surface, <span class="keyword">new</span> Cesium.Cartesian3())       tileset.modelMatrix = Cesium.Matrix4.fromTranslation(translation)       viewer.zoomTo(tileset)     })</code></pre></li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p> <a href="https://www.cnblogs.com/HandyLi/p/11113030.html" target="_blank" rel="noopener">https://www.cnblogs.com/HandyLi/p/11113030.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;cesium加载三维倾斜模型&quot;&gt;&lt;a href=&quot;#cesium加载三维倾斜模型&quot; class=&quot;headerlink&quot; title=&quot;cesium加载三维倾斜模型&quot;&gt;&lt;/a&gt;cesium加载三维倾斜模型&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot;
      
    
    </summary>
    
    
      <category term="cesium从入门到弃坑" scheme="https://drangeer.github.io/categories/cesium%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%BC%83%E5%9D%91/"/>
    
    
      <category term="cesium" scheme="https://drangeer.github.io/tags/cesium/"/>
    
  </entry>
  
  <entry>
    <title>cesium-entity详解</title>
    <link href="https://drangeer.github.io/2020/04/01/cesium-entity/"/>
    <id>https://drangeer.github.io/2020/04/01/cesium-entity/</id>
    <published>2020-04-01T09:09:17.000Z</published>
    <updated>2020-04-14T07:05:23.574Z</updated>
    
    <content type="html"><![CDATA[<p>这里主要记录在使用cesium的entity时候，遇到的一些问题</p><ul><li>点击不同类型的entity，展示对应信息框<br>  目前主要是在entity生成的时候，给他绑定好指定的组件，然后再获取的时候，拿到对应的组件信息，往自定义的customInfoWindow上挂载</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里主要记录在使用cesium的entity时候，遇到的一些问题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击不同类型的entity，展示对应信息框&lt;br&gt;  目前主要是在entity生成的时候，给他绑定好指定的组件，然后再获取的时候，拿到对应的组件信息，往自定义的customInfoW
      
    
    </summary>
    
    
      <category term="cesium" scheme="https://drangeer.github.io/categories/cesium/"/>
    
    
      <category term="question list" scheme="https://drangeer.github.io/tags/question-list/"/>
    
  </entry>
  
  <entry>
    <title>hexo使用记录</title>
    <link href="https://drangeer.github.io/2020/04/01/03_hexo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://drangeer.github.io/2020/04/01/03_hexo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2020-04-01T03:31:21.000Z</published>
    <updated>2020-04-07T07:51:05.843Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-基本命令"><a href="#1-基本命令" class="headerlink" title="1. 基本命令"></a>1. 基本命令</h3><ol><li>启动本地预览服务     <code>hexo s</code></li><li>重新生成项目    <code>hexo g</code></li><li>清空缓存    <code>hexo clean</code></li><li>发布到云端 <code>hexo d</code></li><li>s</li><li>s</li><li>s</li><li>s</li><li>部署到gitee之后，需要手动刷新pages</li></ol><hr><h3 id="2-发布文章"><a href="#2-发布文章" class="headerlink" title="2.发布文章"></a>2.发布文章</h3><pre><code>1. 文章位置  `your project location\source\_posts`2.添加图片   `{% asset_img picPath.png image describe %}` </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-基本命令&quot;&gt;&lt;a href=&quot;#1-基本命令&quot; class=&quot;headerlink&quot; title=&quot;1. 基本命令&quot;&gt;&lt;/a&gt;1. 基本命令&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;启动本地预览服务     &lt;code&gt;hexo s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重新生成
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://drangeer.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://drangeer.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>require.context自动加载模块</title>
    <link href="https://drangeer.github.io/2020/04/01/require-context/"/>
    <id>https://drangeer.github.io/2020/04/01/require-context/</id>
    <published>2020-04-01T03:06:02.000Z</published>
    <updated>2020-04-07T07:53:07.391Z</updated>
    
    <content type="html"><![CDATA[<p>   最近看到项目里面使用<code>require.context</code>来自动加载所有的模块，减少手动复制粘贴，提示效率和代码逼格。整好时间允许，我也来看看到底是如何实现的。</p><h3 id="require-context是什么"><a href="#require-context是什么" class="headerlink" title="require.context是什么"></a>require.context是什么</h3><p>   一个webpack的api,通过执行require.context函数获取一个特定的上下文,主要用来实现自动化导入模块<br>   在前端工程中,如果遇到从一个文件夹引入很多模块的情况,可以使用这个api,它会遍历文件夹中的指定文件,然后自动导入,使得不需要每次显式的调用import导入模块</p><p>   比如在下面的情况中<br>   <img src="/2020/04/01/require-context/p1.png" class="" title="较多的模块导入"></p><h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><p>   require.context的使用方法如下，该函数执行后返回的是一个函数,并且这个函数有3个属性</p><ul><li><p>resolve  接受一个参数request,request为模块的匹配结果的的相对路径,返回这个匹配文件相对于整个工程的相对路径（）</p></li><li><p>keys     返回匹配成功模块的名字组成的数组</p></li><li><p>id       执行环境的id(目前发现没有什么实际意义)</p><pre><code class="javascript"><span class="built_in">require</span>.context(<span class="string">'directory'</span>,<span class="string">'bool'</span>,<span class="string">'reg'</span>)<span class="comment">//directory {String} -读取文件的路径</span><span class="comment">//useSubdirectories {Boolean} -是否遍历文件的子目录   </span><span class="comment">//regExp {RegExp} -匹配文件的正则</span><span class="comment">// 下面为demo</span><span class="keyword">const</span> modules= <span class="built_in">require</span>.context(<span class="string">'./'</span>,<span class="literal">true</span>,/.vue$/);<span class="keyword">const</span> relativePath= modules.keys()  <span class="comment">//获取所有.vue 模块的相对于./的路径</span><span class="keyword">const</span> <span class="built_in">module</span>=modules(relativePath[<span class="number">0</span>]).default  <span class="comment">// 获取第一个模块</span></code></pre><h3 id="使用范围"><a href="#使用范围" class="headerlink" title="使用范围"></a>使用范围</h3><p>1、自动模块导入<br>2、所有图片的导入</p><h3 id="QA"><a href="#QA" class="headerlink" title="QA"></a>QA</h3><p>目前在模块导出的时候，使用一个空对象{}接收对象名和对象值，再export default {XXX:XXX}<br>这样就在使用的时候，必须使用modules.XXX才可以，不能使用{XXX} 来直接使用<br>等待以后慢慢寻找更优解吧</p></li></ul><hr>   <img src="/2020/04/01/require-context/p2.png" class="" title="使用两种方式导出模块">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;   最近看到项目里面使用&lt;code&gt;require.context&lt;/code&gt;来自动加载所有的模块，减少手动复制粘贴，提示效率和代码逼格。整好时间允许，我也来看看到底是如何实现的。&lt;/p&gt;
&lt;h3 id=&quot;require-context是什么&quot;&gt;&lt;a href=&quot;#re
      
    
    </summary>
    
    
    
      <category term="webpack" scheme="https://drangeer.github.io/tags/webpack/"/>
    
      <category term="web" scheme="https://drangeer.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题pure使用指南</title>
    <link href="https://drangeer.github.io/2020/03/13/webpackQuestion/"/>
    <id>https://drangeer.github.io/2020/03/13/webpackQuestion/</id>
    <published>2020-03-13T06:34:15.000Z</published>
    <updated>2020-04-07T07:57:39.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-webpack-打包问题"><a href="#1-webpack-打包问题" class="headerlink" title="1.webpack 打包问题"></a>1.webpack 打包问题</h2><h4 id="Q-问题"><a href="#Q-问题" class="headerlink" title="Q:问题"></a>Q:问题</h4><p>​        当使用<code>&lt;%= BASE_URL %&gt;</code>进行项目打包的时候会抛出如下的bug</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">href</span>=<span class="string">"&lt;%= BASE_URL %&gt;favicon.ico"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  使用base_url的时候，在项目打包过程中会抛出如下错误，</span></span><br><span class="line"><span class="comment">  换成./就没有了，超级奇怪</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// active ...s\normalize-wheel\src\normalizeWheel.jsURIError: Failed to decode param '/%3C%=%20BASE_URL%20%%3Efavicon.ico'</span></span><br></pre></td></tr></table></figure><p><img src="1583826570990.png" alt="webpack编译问题"></p><h4 id="A-解决方法"><a href="#A-解决方法" class="headerlink" title="A:解决方法"></a>A:解决方法</h4><p>​        目前没有查询到问题出现的具体原因。在git上看到有相关的介绍，有说是因为项目级的webpack的版本和内部子模块使用的版本冲突导致；</p><p>​        现在规避了这个问题，使用<code>相对路径./</code>解决。</p><p>​        可能以后会遇到同样的问题，到时候再对这个bug进行完善补充吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-webpack-打包问题&quot;&gt;&lt;a href=&quot;#1-webpack-打包问题&quot; class=&quot;headerlink&quot; title=&quot;1.webpack 打包问题&quot;&gt;&lt;/a&gt;1.webpack 打包问题&lt;/h2&gt;&lt;h4 id=&quot;Q-问题&quot;&gt;&lt;a href=&quot;#Q
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://drangeer.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://drangeer.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World !</title>
    <link href="https://drangeer.github.io/2020/03/12/01_hello-world/"/>
    <id>https://drangeer.github.io/2020/03/12/01_hello-world/</id>
    <published>2020-03-12T07:31:21.000Z</published>
    <updated>2020-04-07T07:47:51.804Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hello-blog-！"><a href="#hello-blog-！" class="headerlink" title="hello blog ！"></a>hello blog ！</h1><p>欢迎我走进自建博客时代，这里会记录一些我的工作和生活点滴事件…</p><hr><p>希望有幸浏览到这个blog的人，共享在此的片刻美好时光 ，若能对您有些许帮助的话，更会感到不胜荣幸！</p><p>​            </p><p>​                                                                                        记录于：2020年3月12日15:31:21</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hello-blog-！&quot;&gt;&lt;a href=&quot;#hello-blog-！&quot; class=&quot;headerlink&quot; title=&quot;hello blog ！&quot;&gt;&lt;/a&gt;hello blog ！&lt;/h1&gt;&lt;p&gt;欢迎我走进自建博客时代，这里会记录一些我的工作和生活点滴事件
      
    
    </summary>
    
    
    
      <category term="随笔" scheme="https://drangeer.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
